Syntax for Generating Treemap
We can generate Treemaps using the Plotly library in Python.

Install Required Libraries:

1
pip install plotly pandas
Copied!
Import Libraries:

1
2
import pandas as pd
import plotly.express as px
Copied!
Load Data:

1
2
3
4
5
6
7
# Replace with your actual dataset or data source
data = {
    'Category': ['Category 1', 'Category 1', 'Category 2', 'Category 2', 'Category 3'],
    'Subcategory': ['Subcategory 1A', 'Subcategory 1B', 'Subcategory 2A', 'Subcategory 2B', 'Subcategory 3A'],
    'Value': [10, 20, 30, 40, 50]
}
df = pd.DataFrame(data)
Copied!
Create Treemap:

1
2
3
4
fig = px.treemap(df,
                 path=['Category', 'Subcategory'],  # Define hierarchical structure
                 values='Value',  # Size of each rectangle
                 title='Treemap Example')  # Title of the treemap
Copied!
Show Treemap:

1
fig.show()

Code to Generate Treemap
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
import plotly.express as px
import pandas as pd
# Sales data
data = {
    'Category': ['Electronics', 'Electronics', 'Electronics', 
                 'Furniture', 'Furniture', 'Furniture', 
                 'Clothing', 'Clothing', 'Clothing'],
    'Subcategory': ['Laptops', 'Smartphones', 'Tablets', 
                    'Chairs', 'Tables', 'Sofas', 
                    'Men', 'Women', 'Kids'],
    'Sales': [120000, 80000, 30000, 
              50000, 40000, 20000, 
              70000, 90000, 40000]
}
df = pd.DataFrame(data)
# Creating the treemap
fig = px.treemap(
    df,
    path=['Category', 'Subcategory'],
    values='Sales',
    title='Sales Data Treemap'
)
fig.show()

PIVOT CHARTS

Syntax for Generating Pivot Charts in Python
Python, with libraries such as Pandas and Matplotlib, provides robust capabilities for creating pivot charts. Below is a step-by-step guide to generating pivot charts using Python.

Install Required Libraries:

1
pip install pandas matplotlib
Copied!
Import Libraries:

1
2
import pandas as pd
import matplotlib.pyplot as plt
Copied!
Load Data:

1
2
# Load data into a pandas DataFrame
data = pd.read_csv('your_dataset.csv')
Copied!
Create a Pivot Table:

pivot_table = data.pivot_table(values='ValueColumn', index='RowIndexColumn', columns='ColumnIndexColumn', aggfunc='sum')
Copied!
Generate Pivot Chart:

pivot_table.plot(kind='bar')
plt.title('Pivot Chart Title')
plt.xlabel('X-axis Label')
plt.ylabel('Y-axis Label')
plt.show()

Create a Pivot Table:

# Create pivot table
pivot_table = df.pivot_table(index='Date', columns=['Category','Subcategory'], values='Sales', aggfunc=np.sum)
Copied!
Generate Pivot Chart:

# Plotting a pivot chart
pivot_table.plot(kind='bar', figsize=(14, 8))
plt.title('Sales Summary of IT Products by Category and Subcategory')
plt.xlabel('Quarters')
plt.ylabel('Total Sales')
plt.grid(False)
plt.legend(title=('Category', 'Subcategory'), bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.show()
